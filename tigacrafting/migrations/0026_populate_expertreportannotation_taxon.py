# Generated by Django 3.2.25 on 2025-01-24 11:00

from django.db import migrations, models

from django.contrib.contenttypes.models import ContentType


def set_expertreportannotation_taxon(apps, schema_editor):
    ExpertReportAnnotation = apps.get_model('tigacrafting', 'ExpertReportAnnotation')
    Taxon = apps.get_model('tigacrafting', 'Taxon')

    Complex = apps.get_model('tigacrafting', 'Complex')
    Categories = apps.get_model('tigacrafting', 'Categories')
    OtherSpecies = apps.get_model('tigacrafting', 'OtherSpecies')

    ComplexContentType = ContentType.objects.get_for_model(Complex)
    CategoriesContentType = ContentType.objects.get_for_model(Categories)
    OtherSpeciesContentType = ContentType.objects.get_for_model(OtherSpecies)

    expert_report_annotation_qs = ExpertReportAnnotation.objects.filter(
        report__type='adult',
        taxon__isnull=True
    )

    # Case when complex is set
    expert_report_annotation_qs.filter(complex__isnull=False).update(
        taxon=models.Subquery(
            Taxon.objects.filter(
                content_type__pk=ComplexContentType.pk,
                object_id=models.OuterRef('complex')
            ).values('pk')[:1]
        )
    )

    # Case when other_species is set
    expert_report_annotation_qs.filter(other_species__isnull=False).update(
        taxon=models.Subquery(
            Taxon.objects.filter(
                content_type__pk=OtherSpeciesContentType.pk,
                object_id=models.OuterRef('other_species')
            ).values('pk')[:1]
        )
    )

    # Case 'Not sure':
    expert_report_annotation_qs.filter(category_id=9).update(taxon_id=1)

    # Otherwise, use category.
    expert_report_annotation_qs.filter(category__isnull=False).update(
        taxon=models.Subquery(
            Taxon.objects.filter(
                content_type__pk=CategoriesContentType.pk,
                object_id=models.OuterRef('category')
            ).values('pk')[:1]
        )
    )


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('tigacrafting', '0025_expertreportannotations_fk_taxon'),
    ]

    operations = [
        migrations.RunPython(set_expertreportannotation_taxon, migrations.RunPython.noop),
    ]
