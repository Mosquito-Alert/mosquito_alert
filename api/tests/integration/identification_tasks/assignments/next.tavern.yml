---

test_name: New identification tasks assignments can not be created by not regular users with permissions.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - identification_task
    - app_user_token
    - jwt_token_user

stages:
  - name: Assignment is not allowed for mobile users
    request:
      url: "{api_live_url}/{endpoint}/next/"
      headers:
        Authorization: "Bearer {app_user_token}"
      method: "POST"
    response:
      status_code: 403
  - name: Non auth user can not assign new identification tasks.
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
    response:
      status_code: 401
  - name: User without perm can not assign new identification tasks.
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 403

---

test_name: Identification tasks assignments can be made only by authenticated users with permissions.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - identification_task
    - jwt_token_user
    - perm_user_can_add_annotations

stages:
  - name: User with perm can assign new identification tasks.
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 201
      json: !force_format_include "{response_data_validation}"

---

test_name: Assign identification tasks return pending annotations if any.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - assigned_only_identification_task
    - user
    - jwt_token_user
    - perm_user_can_add_annotations

stages:
  - name: User with perm can assign new identification tasks.
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 201
      strict:
        - json:off
      json:
        observation:
          uuid: "{assigned_only_identification_task.report.pk}"

---

test_name: Assign identification tasks return 204 if not available annotations

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - jwt_token_user
    - perm_user_can_add_annotations

stages:
  - name: User with perm can assign new identification tasks.
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 204

---

test_name: User can assign identification tasks if role is annotator

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - identification_task
    - user_with_role_annotator
    - jwt_token_user

stages:
  - name: User with role annotation add can assign next
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 201
      json: !force_format_include "{response_data_validation}"

---

test_name: User can assign identification tasks if role is supervisor in country

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - identification_task
    - user_with_role_supervisor_in_country
    - jwt_token_user

stages:
  - name: User with role annotation add can assign next
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 201
      json: !force_format_include "{response_data_validation}"

---

test_name: User can assign identification tasks if role is reviewer

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - identification_task
    - user_with_role_reviewer
    - jwt_token_user

stages:
  - name: User with role annotation add can assign next
    request:
      url: "{api_live_url}/{endpoint}/next/"
      method: "POST"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 201
      json: !force_format_include "{response_data_validation}"