test_name: Annotations can not be listed by authenticated users.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - app_user_token
    - jwt_token_user

stages:
  - name: List method returns 403 for mobile users
    request:
      url: "{api_live_url}/{endpoint}/"
      headers:
        Authorization: "Bearer {app_user_token}"
      method: "GET"
    response:
      status_code: 403
  - name: Non auth user can not list
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
    response:
      status_code: 401
  - name: User without perm view can not list
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 403

---

test_name: Annotations can be list only by authenticated users with permissions.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - jwt_token_user_can_view

stages:
  - name: User with perm view can retrieve
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user_can_view:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_list_data_validation}"

---

test_name: Annotation can be lsit by users without permissions if from a identification task they have annotate.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - jwt_token_user

stages:
  - name: User without perm view can retrieve if annotation from the same task
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_list_data_validation}"

---

test_name: Annotation can be listed if user role is annotator

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - annotation_from_another_user
    - user_with_role_annotator
    - jwt_token_user

stages:
  - name: User with role annotation can retrieve owned annotation
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      strict:
        - json:off
      json:
        count: 2
        results:
          - id: !int "{annotation.pk}"
          - id: !int "{annotation_from_another_user.pk}"

---

test_name: Annotation can be listed if user role is supervisor in country

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - annotation_from_another_user
    - user_with_role_supervisor_in_country
    - jwt_token_user

stages:
  - name: User with role annotation can retrieve owned annotation
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      strict:
        - json:off
      json:
        count: 2
        results:
          - id: !int "{annotation.pk}"
          - id: !int "{annotation_from_another_user.pk}"

---

test_name: Annotation can be listed if user role is reviewer

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - annotation_from_another_user
    - user_with_role_reviewer
    - jwt_token_user

stages:
  - name: User with role annotation can retrieve owned annotation
    request:
      url: "{api_live_url}/{endpoint}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      strict:
        - json:off
      json:
        count: 1
        results:
          - id: !int "{annotation_from_another_user.pk}"