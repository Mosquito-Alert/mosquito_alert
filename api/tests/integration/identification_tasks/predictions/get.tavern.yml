---

test_name: Predictions can be read by users not authenticated or without permissions.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - photo_prediction
    - jwt_token_user
    - app_user_token

stages:
  - name: Retrieve is not allowed for mobile users
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      headers:
        Authorization: "Bearer {app_user_token}"
      method: "GET"
    response:
      status_code: 403
  - name: Non auth user can not retrieve
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
    response:
      status_code: 401
  - name: User without perm view can not retrieve
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 403

---

test_name: Predictions can be read only by authenticated users with permissions.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - photo_prediction
    - jwt_token_user_can_view

stages:
  - name: User without perm view can not retrieve
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user_can_view:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"

---

test_name: Photo prediction can be retrieved by users without permissions if from a identification task they have annotate.

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - photo_prediction
    - jwt_token_user

stages:
  - name: User without perm view can retrieve if annotation from the same task
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"

---

test_name: Prediction can be retireved if user role is annotator and have annotated

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - annotation
    - photo_prediction
    - user_with_role_annotator
    - jwt_token_user

stages:
  - name: User with role annotation can retrieve photo_prediction
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"

---

test_name: Annotation can be retireved if user role is supervisor in country

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - photo_prediction
    - user_with_role_supervisor_in_country
    - jwt_token_user

stages:
  - name: User with role supervisor can retrieve photo_prediction
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"

---

test_name: Annotation can be retireved if user role is reviewer

includes:
  - !include schema.yml

marks:
  - usefixtures:
    - api_live_url
    - endpoint
    - photo_prediction
    - user_with_role_reviewer
    - jwt_token_user

stages:
  - name: User with role reviewer can retrieve photo_prediction
    request:
      url: "{api_live_url}/{endpoint}/{photo_prediction.photo.uuid}/"
      method: "GET"
      headers:
        Authorization: "Bearer {jwt_token_user:s}"
    response:
      status_code: 200
      json: !force_format_include "{response_data_validation}"